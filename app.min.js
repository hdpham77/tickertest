var _milliseconds=1E3,timer,clickTimer,outputHTML,r,plume,c,indicator,baseline,grid,ticks,current={emissions:0,emissions_gtc:0,temperature:0,nonCO2rf:0};

$(document).ready(function(){
	initialiseGraph();
	initialiseHandlers();$(".paper").addClass("loaded");
	timer=setInterval(calculateCurrent,config.refresh);$(".graph-container").show()
});

function initialiseGraph(){
	r=Snap("#graph");
	now=new Date;
	var b=r.gradient(config.styles.plume.gradient);
	plume=r.path("M0,0").attr({stroke:0,fill:b});
	c=r.path("M0,0").attr({fill:"none","stroke-width":4,"stroke-linecap":"round"});
	grid=r.group();xline=r.path("M0,0").attr({stroke:"#8ca4a0","stroke-width":2});
	yline=r.path("M0,0").attr({stroke:"#8ca4a0","stroke-width":2});
	ticks=r.group().attr({fill:"none"});
	borders=r.group(r.rect(0,0,config.offset.x-1,9999).attr({fill:"#fff",stroke:0}),r.rect(0,config.offset.y+config.dimension.height+1,9999,9999).attr({fill:"#fff",stroke:0}),r.rect(0,0,9999,config.offset.y-1).attr({fill:"#fff",stroke:0}),r.rect(config.offset.x+config.dimension.width,0,9999,9999).attr({fill:"#fff",stroke:0}));
	thermometer=r.rect(30,0,20,0,0).attr({fill:"red",stroke:"none"});
	mercury=r.circle(40,config.dimension.height+config.offset.y+25,25).attr({fill:"red",stroke:"white"});
	xLabels=r.group();yLabels=r.group();
	carbon=r.rect(config.offset.x,config.dimension.height+config.offset.y+20,0,20).attr({fill:"black",stroke:"none"});
	label=r.image("img/we-are-here.png",0,0,71,20);
	xLegend=r.text(config.dimension.width/2+config.offset.x,config.dimension.height+config.offset.y+70,config.legend.x).attr(config.styles.legends);
	xLegendTop=r.text(config.dimension.width/2+config.offset.x,17,config.legend.x_top).attr(config.styles.legends);
	yLegend=r.text(8,config.dimension.height/2+config.offset.y,config.legend.y).attr(config.styles.legends);
	yLegend.transform("r270");indicator=r.circle(0,0,10).attr({fill:"red",stroke:"white","stroke-width":2});
	baseline=r.rect(config.offset.x,config.offset.y,config.dimension.width,config.dimension.height).attr({stroke:"black",fill:"none","stroke-width":2});
	plumeLabel=r.text(0,0,"Total human-induced warming").attr({fill:"red","text-anchor":"end","font-size":"20px",opacity:.75});
	logos=r.image("img/logos.png",config.offset.x+config.dimension.width-175,config.offset.y+config.dimension.height-70,155,55);
	updateGraph()
}

function initialiseHandlers(){
	var b=isEventSupported("mousewheel")?"mousewheel":"wheel";
	$("#graph").on(b,function(a){a.preventDefault();
		a=a.originalEvent;
		zoomGraph(a.deltaY||a.wheelDelta)
	});
	$("#in").click(function(a){a.preventDefault();
		zoomGraph(1)}).mousedown(function(a){a.preventDefault();
		clickTimer=setInterval(function(){zoomGraph(1)},30)}).mouseup(function(a){window.clearInterval(clickTimer)});

	$("#out").click(function(a){a.preventDefault();
		zoomGraph(-1)}).mousedown(function(a){a.preventDefault();
		clickTimer=setInterval(function(){zoomGraph(-1)},30)}).mouseup(function(a){window.clearInterval(clickTimer)})
}

function zoomGraph(b){
	xCurrentRange=config.graph.x.max-config.graph.x.min;
	yCurrentRange=config.graph.y.max-config.graph.y.min;
	if(0<b){
		xTargetRange=xCurrentRange/config.zoom.scale.x;
		yTargetRange=yCurrentRange/config.zoom.scale.y;
		if(xTargetRange<config.zoom.boundaries.x.range) return; 
		xOffset=xTargetRange/2;yOffset=yTargetRange/2;
		config.graph.x.inc=powerOfTen(xTargetRange);
		config.graph.y.inc=powerOfTen(yTargetRange);
		config.graph.x.min=current.emissions-xOffset;
		config.graph.x.max=current.emissions+xOffset;
		config.graph.y.min=current.temperature-yOffset;config.graph.y.max=current.temperature+yOffset
	} else xTargetRange=xCurrentRange*config.zoom.scale.x,yTargetRange=yCurrentRange*config.zoom.scale.y,config.graph.x.inc=powerOfTen(xTargetRange),config.graph.y.inc=powerOfTen(yTargetRange),xOffset=(xTargetRange-xCurrentRange)/2,yOffset=(yTargetRange-yCurrentRange)/2,config.graph.x.min-=xOffset,config.graph.x.max+=xOffset,config.graph.y.min-=yOffset,config.graph.y.max+=yOffset;

	config.graph.x.min<config.zoom.boundaries.x.min&&(config.graph.x.min=config.zoom.boundaries.x.min,config.graph.x.max=xTargetRange);
	config.graph.y.min<config.zoom.boundaries.y.min&&(config.graph.y.min=config.zoom.boundaries.y.min,config.graph.y.max=yTargetRange);
	config.graph.x.max>config.zoom.boundaries.x.max&&(config.graph.x.max=config.zoom.boundaries.x.max);
	config.graph.y.max>config.zoom.boundaries.y.max&&(config.graph.y.max=config.zoom.boundaries.y.max);
	updateGraph()
}

function calculateCurrent(){
	var b=new Date,a=(b-basisDate)/_milliseconds;
	current.temperature=calculateTempRise(a);
	0<=current.temperature?outputHTML="+":outputHtml="-";outputHTML+=parseFloat(current.temperature).toFixed(9);
	$("#current-temp-rise span").html(outputHTML);
	$("#date-count").html(b.toGMTString());
	
	current.nonCO2rf=calculateNonCO2_RF(a);
	0<=current.nonCO2rf?outputHTML="+":outputHtml="-";outputHTML+=parseFloat(current.nonCO2rf).toFixed(9);
	$("#current-nonCO2_RF span").html(outputHTML);
	
	current.emissions=calculateCarbonEmissions(a)/config.billion;
	$("#current-carbon-emissions span").html((current.emissions/1000).toFixed(9));
	updateIndicator()

	current.emissions_gtc=calculateCarbonEmissions(a)/config.billion;
	$("#current-carbon-emissions_gtc span").html((current.emissions_gtc*config.billion*12/44).round(0).toString().replace(/,/g,"").replace(/\B(?=(\d{3})+(?!\d))/g,","));
	updateIndicator()
}

function updateIndicator(){
	dy=Math.round(config.offset.y+config.dimension.height-(current.temperature-config.graph.y.min)*yMultiplier);
	dx=Math.round(config.offset.x+xMultiplier*(current.emissions-config.graph.x.min));indicator.attr({cx:dx,cy:dy});
	xline.attr("path","M"+dx+","+config.offset.y+"L"+dx+","+(config.dimension.height+config.offset.y));
	yline.attr("path","M"+config.offset.x+","+dy+"L"+(config.dimension.width+config.offset.x)+","+dy);
	thermometer.attr({y:dy,height:config.dimension.height+config.offset.y-dy+25});
	carbon.attr({width:dx-config.offset.x});label.attr({x:dx+10,y:dy-25})
}

function updateGraph(){
	grid.clear();
	ticks.clear();
	xLabels.clear();
	yLabels.clear();
	xMultiplier=config.dimension.width/(config.graph.x.max-config.graph.x.min);
	yMultiplier=config.dimension.height/(config.graph.y.max-config.graph.y.min);
	start=roundUp(config.graph.x.min,config.graph.x.inc);
	end=roundUp(config.graph.x.max,config.graph.x.inc)-1E-8;
	inc=config.graph.x.inc;
	y_start_position=config.offset.y+config.dimension.height-7;
	y_end_position=config.dimension.height+config.offset.y;
	for(i=start;i<end;i+=inc) dx=config.offset.x+xMultiplier*(i-config.graph.x.min),ticks.add(r.path("M"+dx+","+y_start_position+"L"+dx+","+y_end_position)),grid.add(r.path("M"+dx+","+config.offset.y+"L"+dx+","+(config.offset.y+config.dimension.height)));

	for(i=start;i<end;i+=inc) dx=config.offset.x+xMultiplier*(i-config.graph.x.min),xLabels.add(r.text(dx,config.dimension.height+config.offset.y+15,i.round(config.rounding)));

	co2start=44*config.graph.x.min/12;
	co2end=44*config.graph.x.max/12;
	co2multiplier=config.dimension.width/(co2end-co2start);
	y_start_position=config.offset.y;
	y_end_position=7+config.offset.y;
	inc=powerOfTen(co2end-co2start);
	start=roundUp(co2start,inc);
	end=roundUp(co2end,inc)-1E-8;
	for(i=start;i<end;i+=inc) dx=config.offset.x+co2multiplier*(i-co2start),ticks.add(r.path("M"+dx+","+y_start_position+"L"+dx+","+y_end_position)),xLabels.add(r.text(dx,43,i.round(config.rounding)));

	start=roundUp(config.graph.y.min,config.graph.y.inc);
	end=roundUp(config.graph.y.max,config.graph.y.inc);
	inc=config.graph.y.inc;
	x_start_position=config.offset.x;
	x_end_position=config.offset.x+7;
	x2_start_position=config.offset.x+config.dimension.width-7;
	x2_end_position=config.offset.x+config.dimension.width;
	inc/=2;
	for(i=start;i<end;i+=inc) dy=config.offset.y+config.dimension.height-yMultiplier*(i-config.graph.y.min),dy>config.offset.y&&(ticks.add(r.path("M"+x_start_position+","+dy+"L"+x_end_position+","+dy),r.path("M"+x2_start_position+","+dy+"L"+x2_end_position+","+dy)),grid.add(r.path("M"+x_start_position+","+dy+"L"+x2_end_position+","+dy)));

	x_pos=config.offset.x-6;
	for(i=start;i<=end;i+=inc) dy=config.offset.y+config.dimension.height-yMultiplier*(i-config.graph.y.min),dy>=config.offset.y&&yLabels.add(r.text(x_pos,dy+4,i.round(config.rounding)));

	ticks.attr(config.styles.ticks);
	grid.attr(config.styles.grid);
	xLabels.attr(config.styles.labels.x);
	yLabels.attr(config.styles.labels.y);
	started=!1;path="";
	$.each(config.plume,function(b,a){ 1==started?path+="L":(path+="M",started=!0);
		xco=Math.round(config.offset.x+(b-config.graph.x.min)*xMultiplier);
		9999<xco&&(xco=9999);
		0>xco&&(xco=0);
		yco=Math.round(config.offset.y+config.dimension.height-(a-config.graph.y.min)*yMultiplier);
		9999<yco&&(yco=9999);
		-9999>yco&&(yco=-9999);
		path+=xco+" "+yco+" "});
	path+="Z";plume.attr("path",path);
	xco=Math.round(config.offset.x+(1350-config.graph.x.min)*xMultiplier);
	yco=Math.round(config.offset.y+config.dimension.height-(3.95-config.graph.y.min)*yMultiplier);
	plumeLabel.attr({x:xco,y:yco});
	updateIndicator()
}

function roundUp(b,a){return a*Math.ceil(b/a)}

function roundDown(b,a){return a*Math.floor(b/a)}

Number.prototype.round=function(b){return+(Math.round(this+"e+"+b)+"e-"+b)};

function isEventSupported(b){
	var a=document.createElement("div");
	b="on"+b;var d=b in a;
	d||(a.setAttribute(b,"return;"),d="function"==typeof a[b]);
	return d
}

function powerOfTen(b){return Math.pow(10,Math.floor(Math.log(b)/Math.LN10))};








